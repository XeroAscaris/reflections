When would you want to use a remote repository rather than keeping all your work local?

when you have to work on something, but are not travelling with your main PC.  Work on your travel laptop, push to github, then fetch later at home.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

You may want to make changes to your local repository that you don't want to publish to your remote repository.  This could be for testing purposes, or even because you aren't sure something is working.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

forks allow you to clone specifically a repository on github that you want to edit, but leave the original repository in its original form.  a clone is a little more broad, and just copies a repository, whether it be from github to your local pc or even within a single pc.  branches are different versions of the same repository that have different elements of code, which is used for experimental code ideas or organizational choices for how to implement and add code components.

What is the benefit of having a copy of the last known state of the remote stored locally?

It allows for sane and organized cross reference for possible conflicts and allows a logical restore point to be stored in terms of  your commit history.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Not using either git or github would get harder and harder with the more collaboration you would use.  If you were by yourself, version control could theoretically be done, but could still hit big snags if you break your code in some way, and don't know where to fix it.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

You would want to utilize a separate branch when you are testing something out or trying a different method of something.
Using the branch method allows you to try it, and then see how that new concept can work.  Then you can add it to the master if you know it is up to snuff.  